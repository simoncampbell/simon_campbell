/*------------------------------------*\
    $FORMS
\*------------------------------------*/


textarea,
.text-input,
input {
    @extend %font__display--regular;
    @include vendor(border-radius, $brand-round);
    -webkit-appearance:none;
    border: 1px solid $color__border--dark;

    &::-webkit-input-placeholder,
    &:-moz-placeholder,
    &::-moz-placeholder {
        @extend %font__display--regular;
    }

    &:focus {
        outline:none;
        border: 1px solid darken($color__border--dark, 15);
    }
}


.form-block {
    padding:$base-spacing-unit;
}




/**
 * Text inputs
 *
 * Instead of a `[type]` selector for each kind of form input, we just use a
 * class to target any/every one, e.g.:
   <input type=text class=text-input>
   <input type=email class=text-input>
   <input type=password class=text-input>
 *
 */
.text-input,
input {
    height: 40px;
    height: calc-rem(40px);
}



/**
 * Labels
 *
 * Define a `.label` class as well as a `label` element. This means we can apply
 * label-like styling to meta-labels for groups of options where a `label`
 * element is not suitable, e.g.:
 */
label,
.label{
    @extend %font__display--black;
    @extend .h4;
    font-size: 15px;
    font-size: calc-rem(15px);
    text-transform:uppercase;
    display:block;
}
    /**
     * Extra help text in `label`s, e.g.:
     *
       <label>Card number <small class=additional>No spaces</small></label>
     *
     */
    .additional{
        display:block;
        font-weight:normal;
    }


/*
 * Groups of checkboxes and radios, e.g.:
 *
   <li>
       <ul class=check-list>
           <li>
               <input /> <label />
           </li>
           <li>
               <input /> <label />
           </li>
       </ul>
   </li>
 *
 */
.check-list{
    list-style:none;
    margin:0;
}
    /*
     * Labels in check-lists
     */
    .check-label,
    .check-list label,
    .check-list .label{
        display:inline-block;
    }


