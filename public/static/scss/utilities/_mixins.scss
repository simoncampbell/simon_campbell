/*------------------------------------*\
    $MIXINS
\*------------------------------------*/

/**
 * Calculate rems. $target = pixel size. $context = base pixel size
 */

@function calc-rem($target, $context: $base-font-size) {
     @return ($target / $context) * 1rem;
}


/**
 * Output vendor properties
 */

@mixin vendor($property, $value...){
    -webkit-#{$property}:$value;
       -moz-#{$property}:$value;
        -ms-#{$property}:$value;
         -o-#{$property}:$value;
}


/**
 * Column widths in a function, in rems
 */

@mixin max-width ($cols:1) {
    max-width: ($cols * ($column + $gutter) - $gutter);
    max-width: ($cols * ($column + $gutter) - $gutter) / $rem;
}

@mixin width ($cols:1) {
    width: ($cols * ($column + $gutter) - $gutter);
    width: ($cols * ($column + $gutter) - $gutter) / $rem;
}



/**
 * Retina images
 */

@mixin image-2x($image, $width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3),
         (-o-min-device-pixel-ratio: 2.6/2),
         (-webkit-min-device-pixel-ratio: 1.3),
         (min-device-pixel-ratio: 1.3),
         (min-resolution: 1.3dppx) {
    /* on retina, use image that's scaled by 2 */
    background-image: url($image);
    background-size: $width $height;
  }
}